<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_orc</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Creation Code

MOVEMENT_SPEED = 5;
GRAVITY = 2;
v_speed = 0;
JUMP_SPEED = 22;
MAX_HP = 5;
current_hp = MAX_HP;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI

//If monster can see player on same horizontal level move towards player

if(!instance_exists(obj_hero)){
    exit;
}

movement_direction = 0;

if(obj_hero.y &gt; y - 32 &amp;&amp; obj_hero.y &lt; y + 32){
    movement_direction = sign(obj_hero.x-x);
}

//If adjacent to hero randomly attack

if(abs(x - obj_hero.x) == 32 &amp;&amp; obj_hero.y == y){
    var hit = random(100);
    if(hit &lt;= 2){
        with(obj_hero){
            //Trigger hit sound in hero
            event_user(0);
        }
        obj_hero.current_hp-=1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Vertical Movement Control

/*
var key_right = keyboard_check(vk_right);
var key_left = -keyboard_check(vk_left);
var move = key_right + key_left;
*/

//var key_jump = keyboard_check_pressed(vk_space);
/*
if(place_meeting(x,y+1,obj_wall)){
    v_speed = key_jump * (-JUMP_SPEED);
}
*/
if(!instance_exists(obj_hero)){
    exit;
}


if(v_speed &lt; 11 * GRAVITY){
    v_speed += GRAVITY;
}

if(place_meeting(x,y+v_speed,obj_wall)||place_meeting(x,y+v_speed,obj_hero)){
    while(!place_meeting(x,y+sign(v_speed),obj_wall)&amp;&amp;!place_meeting(x,y+sign(v_speed),obj_hero)){
        y += sign(v_speed);
    }
    v_speed = 0;
}

y += v_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Horizontal Movement Control
/*
var key_right = keyboard_check(vk_right);
var key_left = -keyboard_check(vk_left);
*/

if(!instance_exists(obj_hero)){
    exit;
}

var move = movement_direction;
var h_speed = move*MOVEMENT_SPEED;

if(place_meeting(x+h_speed,y,obj_wall)||place_meeting(x+h_speed,y,obj_hero)){
    while(!place_meeting(x+sign(h_speed),y,obj_wall)&amp;&amp;!place_meeting(x+sign(h_speed),y,obj_hero)){
        x += sign(h_speed);
    }
    h_speed = 0;
}

x += h_speed;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Check Health
if(current_hp &lt;=0){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
