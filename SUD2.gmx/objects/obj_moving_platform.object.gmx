<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_brick_wall</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_wall</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
target = instance_nearest(x,y,obj_path_target);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Fix coordinates to screen coordinates
if(x mod 1 &gt; 0.5) x = ceil(x); else x = floor(x);
if(y mod 1 &gt; 0.5) y = ceil(y); else y = floor(y);
with(obj_hero){
    if(x mod 1 &gt; 0.5) x = ceil(x); else x = floor(x);
    if(y mod 1 &gt; 0.5) y = ceil(y); else y = floor(y);
}
//Test for passenger
var passenger = noone;
var rx = 0;
var ry = 0;
var dx = 0;
var dy = 0;
var ux = 0;
var uy = 0;

if(place_meeting(x,y-1,obj_hero)){
    passenger = instance_place(x,y-1,obj_hero);
    rx = passenger.x - x;
    ry = passenger.y - y;
}

//Calculate Displacement Vector
dx = target.x - x;
dy = target.y - y;

//Calculate Unit Vector
var magnitude = sqrt(dx * dx + dy * dy);
if(magnitude &gt; 0){
    ux = dx/magnitude;
    uy = dy/magnitude;
}

//Follow Target
while((abs(target.x - x) &gt;= 1)||(abs(target.y - y) &gt;= 1)){
    x += ux;
    y += uy;
    while(place_meeting(x,y,obj_hero)){
        var obstruction = instance_place(x,y,obj_hero);
        obstruction.x += ux;
        obstruction.y += uy;
    }
}

//Reposition Passenger
if(passenger != noone){
    passenger.x = x + rx;
    passenger.y = y + ry;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
